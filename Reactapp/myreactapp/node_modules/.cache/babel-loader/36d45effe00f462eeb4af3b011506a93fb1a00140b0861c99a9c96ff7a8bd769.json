{"ast":null,"code":"var _jsxFileName = \"/home/sarvesh/Desktop/LFX/WEb/myproject/Reactapp/myreactapp/src/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [input, setInput] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const handleInputChange = event => {\n    setInput(event.target.value);\n  };\n  const handleSend = async () => {\n    if (!input.trim()) return; // Prevent sending empty messages\n    const response = await fetch('http://localhost:8000/api/chat/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message: input\n      })\n    });\n    if (response.ok) {\n      const data = await response.json();\n      setChatHistory([...chatHistory, {\n        type: 'user',\n        text: input\n      }, {\n        type: 'bot',\n        text: data.response\n      }]);\n      setInput('');\n    } else {\n      console.error('Failed to send message');\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-history\",\n      children: chatHistory.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: item.type === 'user' ? 'chat-message user-message' : 'chat-message bot-message',\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: item.type === 'user' ? 'You:' : 'Bot:'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), \" \", item.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"chat-input\",\n      value: input,\n      onChange: handleInputChange,\n      onKeyPress: handleKeyPress,\n      placeholder: \"Type a message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chat-button\",\n      onClick: handleSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"BKN6oSDDD0n34jtbmzIBOD6qcsg=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chat","_s","input","setInput","chatHistory","setChatHistory","handleInputChange","event","target","value","handleSend","trim","response","fetch","method","headers","body","JSON","stringify","message","ok","data","json","type","text","console","error","handleKeyPress","key","className","children","map","item","index","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onKeyPress","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/sarvesh/Desktop/LFX/WEb/myproject/Reactapp/myreactapp/src/Chat.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Chat.css';\n\nfunction Chat() {\n    const [input, setInput] = useState('');\n    const [chatHistory, setChatHistory] = useState([]);\n\n    const handleInputChange = (event) => {\n        setInput(event.target.value);\n    };\n\n    const handleSend = async () => {\n        if (!input.trim()) return; // Prevent sending empty messages\n        const response = await fetch('http://localhost:8000/api/chat/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ message: input }),\n        });\n\n        if (response.ok) {\n            const data = await response.json();\n            setChatHistory([...chatHistory, { type: 'user', text: input }, { type: 'bot', text: data.response }]);\n            setInput('');\n        } else {\n            console.error('Failed to send message');\n        }\n    };\n\n    const handleKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            handleSend();\n        }\n    };\n\n    return (\n        <div className=\"chat-container\">\n            <div className=\"chat-history\">\n                {chatHistory.map((item, index) => (\n                    <div key={index} className={item.type === 'user' ? 'chat-message user-message' : 'chat-message bot-message'}>\n                        <b>{item.type === 'user' ? 'You:' : 'Bot:'}</b> {item.text}\n                    </div>\n                ))}\n            </div>\n            <input\n                className=\"chat-input\"\n                value={input}\n                onChange={handleInputChange}\n                onKeyPress={handleKeyPress}\n                placeholder=\"Type a message...\"\n            />\n            <button className=\"chat-button\" onClick={handleSend}>Send</button>\n        </div>\n    );\n}\n\nexport default Chat;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMS,iBAAiB,GAAIC,KAAK,IAAK;IACjCJ,QAAQ,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI,CAACR,KAAK,CAACS,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC;IAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAC5DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,OAAO,EAAEjB;MAAM,CAAC;IAC3C,CAAC,CAAC;IAEF,IAAIU,QAAQ,CAACQ,EAAE,EAAE;MACb,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClCjB,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAE;QAAEmB,IAAI,EAAE,MAAM;QAAEC,IAAI,EAAEtB;MAAM,CAAC,EAAE;QAAEqB,IAAI,EAAE,KAAK;QAAEC,IAAI,EAAEH,IAAI,CAACT;MAAS,CAAC,CAAC,CAAC;MACrGT,QAAQ,CAAC,EAAE,CAAC;IAChB,CAAC,MAAM;MACHsB,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC;IAC3C;EACJ,CAAC;EAED,MAAMC,cAAc,GAAIpB,KAAK,IAAK;IAC9B,IAAIA,KAAK,CAACqB,GAAG,KAAK,OAAO,EAAE;MACvBlB,UAAU,CAAC,CAAC;IAChB;EACJ,CAAC;EAED,oBACIX,OAAA;IAAK8B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3B/B,OAAA;MAAK8B,SAAS,EAAC,cAAc;MAAAC,QAAA,EACxB1B,WAAW,CAAC2B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzBlC,OAAA;QAAiB8B,SAAS,EAAEG,IAAI,CAACT,IAAI,KAAK,MAAM,GAAG,2BAA2B,GAAG,0BAA2B;QAAAO,QAAA,gBACxG/B,OAAA;UAAA+B,QAAA,EAAIE,IAAI,CAACT,IAAI,KAAK,MAAM,GAAG,MAAM,GAAG;QAAM;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,KAAC,EAACL,IAAI,CAACR,IAAI;MAAA,GADpDS,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNtC,OAAA;MACI8B,SAAS,EAAC,YAAY;MACtBpB,KAAK,EAAEP,KAAM;MACboC,QAAQ,EAAEhC,iBAAkB;MAC5BiC,UAAU,EAAEZ,cAAe;MAC3Ba,WAAW,EAAC;IAAmB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACFtC,OAAA;MAAQ8B,SAAS,EAAC,aAAa;MAACY,OAAO,EAAE/B,UAAW;MAAAoB,QAAA,EAAC;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEd;AAACpC,EAAA,CApDQD,IAAI;AAAA0C,EAAA,GAAJ1C,IAAI;AAsDb,eAAeA,IAAI;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}